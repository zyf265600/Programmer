#include <iostream>
using namespace std;

//对象的初始化和清理
// 1.构造函数 进行初始化操作
// 2.析构函数 进行对象清理

class Person
{
public:
    //构造函数
    // 1.没有返回值也不写void
    // 2.函数名称与类名相同
    // 3.构造函数可以有参数，因此可以发生重载
    // 4.在调用对象时候会自动调用构造，无须手动调用，而且只会调用一次
    Person()
    {
        cout << "Person的构造函数调用" << endl;
    }
    //如果不手动输入构造函数，编译器会自动编写一个空实现
    //格式为
    /*
    Person()
    {
    }
    */

    //析构函数
    // 1. 析构函数，没有返回值也不写void
    // 2. 函数名称与类名相同,在名称前加上符号 ~
    // 3. 析构函数不可以有参数，因此不可以发生重载
    // 4. 程序在对象销毁前会自动调用析构，无须手动调用,而且只会调用一次
    ~Person()
    {
        cout << "Person的析构函数调用" << endl;
    }
    //如果不手动输入析构函数，编译器会自动编写一个空实现
    //格式为
    /*
    ~Person()
    {
    }
    */
};

void test01()
{
    Person p; //在栈上的数据，函数执行完空间将会释放这个对象，因此调用析构函数
}

int main()
{
    test01();
    return 0;
}